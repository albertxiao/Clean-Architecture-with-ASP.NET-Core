/*
Deployment script for LibraryManagementSystem

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LibraryManagementSystem"
:setvar DefaultFilePrefix "LibraryManagementSystem"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQL2017\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

MERGE INTO dbo.Libraries AS TARGET
USING ( VALUES
	(1, 'Jeffson Library','101 Brentwood Ln')
)
AS SOURCE (Id, [Name], [Address])
ON TARGET.Id = SOURCE.Id
WHEN MATCHED THEN
	UPDATE SET 
		[Name]=SOURCE.[Name],
		[Address]=SOURCE.[Address]
WHEN NOT MATCHED BY TARGET THEN
	INSERT ([Name], [Address])
	VALUES ([Name], [Address])
WHEN NOT MATCHED BY SOURCE THEN
	DELETE;
MERGE INTO dbo.Clients AS TARGET
USING ( VALUES
	(1, 'Eric', 'Li', 'test@gmail.com', GETDATE(), 1, NULL,NULL,NULL,NULL),
	(2, 'Emily', 'Li', 'test@gmail.com', GETDATE(), 1, NULL,NULL,NULL,NULL)
)
AS SOURCE (Id, FirstName, LastName, Email, CreatedDate, CreatedById, ModifiedDate, ModifiedById, DeletedDate, DeletedById)
ON TARGET.Id = SOURCE.Id
WHEN MATCHED THEN
	UPDATE SET 
	FirstName=SOURCE.FirstName,
	LastName=SOURCE.LastName,
	Email=SOURCE.Email,
	CreatedDate=SOURCE.CreatedDate,
	CreatedById=SOURCE.CreatedById,
	ModifiedDate=SOURCE.ModifiedDate,
	ModifiedById=SOURCE.ModifiedById,
	DeletedDate=SOURCE.DeletedDate,
	DeletedById=SOURCE.DeletedById
WHEN NOT MATCHED BY TARGET THEN
	INSERT (FirstName, LastName, Email, CreatedDate, CreatedById, ModifiedDate, ModifiedById, DeletedDate, DeletedById)
	VALUES (FirstName, LastName, Email, CreatedDate, CreatedById, ModifiedDate, ModifiedById, DeletedDate, DeletedById)
WHEN NOT MATCHED BY SOURCE THEN
	DELETE;
MERGE INTO dbo.Books AS TARGET
USING ( VALUES
	(1, 'Organic Chemistry',1),
	(2, 'Physical Chemistry',1),
	(3, 'Java',1),
	(4, 'Advance Java',1)
)
AS SOURCE (Id, [Name], [LibraryId])
ON TARGET.Id = SOURCE.Id
WHEN MATCHED THEN
	UPDATE SET 
		[Name]=SOURCE.[Name],
		[LibraryId]=SOURCE.[LibraryId]
WHEN NOT MATCHED BY TARGET THEN
	INSERT ([Name], [LibraryId])
	VALUES ([Name], [LibraryId])
WHEN NOT MATCHED BY SOURCE THEN
	DELETE;
MERGE INTO dbo.ClientXBooks AS TARGET
USING ( VALUES
	(1, 1,1,1,GETDATE(), DATEADD(DAY,30, GETDATE())),
	(1, 1,2,1,GETDATE(), DATEADD(DAY,30, GETDATE())),
	(1, 1,3,1,GETDATE(), DATEADD(DAY,30, GETDATE())),
	(1, 1,4,1,GETDATE(), DATEADD(DAY,30, GETDATE()))
)
AS SOURCE (Id, ClientId, BookId, CreatedById, CreatedDate, ExpirationDate)
ON TARGET.Id = SOURCE.Id
WHEN MATCHED THEN
	UPDATE SET 
		ClientId=SOURCE.ClientId,
		BookId=SOURCE.BookId,
		CreatedById=SOURCE.CreatedById,
		CreatedDate=SOURCE.CreatedDate,
		Expiration=SOURCE.ExpirationDate
WHEN NOT MATCHED BY TARGET THEN
	INSERT (ClientId, BookId, CreatedById, CreatedDate, ExpirationDate)
	VALUES (ClientId, BookId, CreatedById, CreatedDate, ExpirationDate)
WHEN NOT MATCHED BY SOURCE THEN
	DELETE;
GO

GO
PRINT N'Update complete.';


GO
